#:import data_caching data_caching
#:import strings strings
#: import values values
<ManagerLayout>:
    puzzle_label: puzzle_label
	timer_label: timer_label
	timer_layout_manager: timer_layout_manager
	tossup_button: tossup_button
    name_input: name_input
    score_edit: score_edit
    custom_value: custom_value
    dropdown: dropdown
    btn_red: btn_red
    btn_ylw: btn_ylw
    btn_blu: btn_blu
    
    orientation: 'vertical'
	FloatLayout:
		size_hint_y: 0.5
		Label:
			id: puzzle_label
			halign: 'center'
			pos_hint: {'x': 0, 'y': 0}
		Label:
			id: timer_label
			text_size: self.size
			halign: 'right'
			valign: 'top'
			padding: (5, 5)
			pos_hint: {'x': 0, 'y': 0}
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: 0.25
        Button:
            text: strings.title_select_puzzle
            on_release: root.choose_puzzle()
        Button:
            text: strings.mgr_btn_clear
            on_release: root.clear_puzzle()
        Button:
            text: strings.mgr_btn_reveal
            on_release: root.reveal_puzzle()
		ScreenManager:
			id: timer_layout_manager
			Screen:
				name: 'start'
				Button:
					text: strings.button_timer_start
					on_release:
						root.timer()
						timer_layout_manager.current = 'running'
			Screen:
				name: 'running'
				Button:
					text: strings.button_timer_pause
					on_release:
						root.timer()
						timer_layout_manager.current = 'paused'
			Screen:
				name: 'paused'
				BoxLayout:
					orientation: 'horizontal'
					Button:
						text: strings.button_timer_reset
						on_release:
							root.reset_timer()
							timer_layout_manager.current = 'start'
					Button:
						text: strings.button_timer_resume
						on_release:
							root.timer()
							timer_layout_manager.current = 'running'
			Screen:
				name: 'timeout'
				Button:
					text: strings.button_timer_reset
					on_release:
						root.reset_timer()
						timer_layout_manager.current = 'start'
		Button:
			id: tossup_button
			text: strings.mgr_btn_tossup
			on_release: root.tossup()
		Button:
			text: strings.button_bonus_round
			on_release: root.bonus_round()
    BoxLayout:
        orientation: 'horizontal'
        PlayerButton:
            id: btn_red
            bg_color: values.color_red
            on_release: root.select_red()
        PlayerButton:
            id: btn_ylw
            bg_color: values.color_yellow
            on_release: root.select_yellow()
        PlayerButton:
            id: btn_blu
            bg_color: values.color_blue
            on_release: root.select_blue()
    GridLayout:
        rows: 2
        cols: 2
        BoxLayout:
            orientation: 'horizontal'
            TabCyclable:
                id: name_input
                hint_text: strings.input_name
				multiline: False
				on_text_validate:
					root.update_name(self.text)
					root.bind_keyboard_self()
				prev_widget: custom_value
				next_widget: score_edit
            SquareButton:
                text: strings.button_ok
                on_release: root.update_name(name_input.text)
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: '-'
                size_hint_x: 0.5
				on_release:
					root.add_score(-data_caching.str_to_int(score_edit.text))
            TabCyclable:
                id: score_edit
                hint_text: strings.input_adjust_score
				multiline: False
				on_text_validate:
					root.bind_keyboard_self()
				prev_widget: name_input
				next_widget: custom_value
            Button:
                text: '+'
                size_hint_x: 0.5
				on_release:
					root.add_score(data_caching.str_to_int(score_edit.text))
        BoxLayout:
            orientation: 'horizontal'
            BoxLayout:
                orientation: 'vertical'
                TabCyclable:
                    id: custom_value
                    hint_text: strings.input_custom
					multiline: False
					on_text_validate:
						root.bind_keyboard_self()
					prev_widget: score_edit
					next_widget: name_input
                BoxLayout:
                    orientation: 'horizontal'
                    Spinner:
                        id: dropdown
                        text: strings.mgr_select_value
                    SettingsButton:
                        on_release: root.cash_settings()
            SquareButton:
                text: strings.button_guess_letter
                on_release: root.guess_letter()
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: strings.mgr_btn_lose_turn
                on_release: root.lose_turn()
            Button:
                text: strings.mgr_btn_bankrupt
                on_release: root.bankrupt()
            Button:
                text: strings.mgr_btn_bank
                on_release: root.bank_score()
<Button>:
    halign: 'center'
<SquareButton>:
    size_hint_x: None
    width:self.height
<SettingsButton>:
    size_hint_x: None
    width:self.height
    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: strings.file_settings_icon
