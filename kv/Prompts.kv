#:import data_caching data_caching
#:import LetterboardLayout used_letters.LetterboardLayout
#:import NoTransition kivy.uix.screenmanager.NoTransition
#:import os os
#:import strings strings
#:import values values
<SavePuzzlePrompt>
    cat_label: cat_label
	cat_input: cat_input
	clue_input: clue_input
	title: strings.title_save_puzzle
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
			    id: cat_label
				text: strings.label_category
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: cat_input
				multiline: False
				prev_widget: clue_input
				next_widget: clue_input
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_clue
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: clue_input
				multiline: False
				prev_widget: cat_input
				next_widget: cat_input
		Widget:
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_save
				on_release: root.input_save()
<LoadGamePrompt>:
	puzzle_layout: puzzle_layout
	title: strings.title_select_game
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_load
				on_release: root.import_game()
			Button:
				text: strings.button_export
				on_release: root.export_game()
		ScrollView:
			BoxLayout:
				orientation: 'vertical'
				size_hint_y: None
				height: self.minimum_height
				BoxLayout:
					orientation: 'horizontal'
					size_hint_y: None
					height: 30
					Widget:
						size_hint_x: 0.25
					Label:
						text: '[b]{}[/b]'.format(strings.label_puzzle)
						markup: True
						size_hint_x: 1.75
					Label:
						text: '[b]{}[/b]'.format(strings.label_round_type)
						markup: True
					Label:
						text: '[b]{}[/b]'.format(strings.label_reward)
						markup: True
				BoxLayout:
					orientation: 'vertical'
					size_hint_y: None
					height: self.minimum_height
					BoxLayout:
						id: puzzle_layout
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height
					BoxLayout:
						orientation: 'horizontal'
						size_hint_y: None
						height: 30
						Button:
							text: '-'
							size_hint_x: 0.125
							on_release: root.remove_round()
						Button:
							text: '+'
							size_hint_x: 0.125
							on_release: root.add_round()
						Button:
							text: strings.button_clear_puzzles
							size_hint_x: 1.75
							on_release: root.clear_puzzles()
						Widget:
							size_hint_x: 2
		Widget:
			size_hint_y: None
			height: 5
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.confirm()
<LoadPuzzlePrompt>:
	puzzle_layout: puzzle_layout
	title: strings.title_select_puzzle
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_load
				on_release: root.import_puzzles()
			Button:
				text: strings.button_export
				on_release: root.export_puzzles()
			Button:
				text: strings.button_delete_all
				on_release: root.prompt_delete_all()
		Widget:
			size_hint_y: 0.02
		ScrollView:
			BoxLayout:
				orientation: 'vertical'
				size_hint_y: None
				height: self.minimum_height
				BoxLayout:
					id: puzzle_layout
					orientation: 'vertical'
					size_hint_y: None
					height: self.minimum_height
				Widget:
		Widget:
			size_hint_y: 0.02
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.input_save()
<PuzzleButton>:
	toggle_button: toggle_button
	orientation: 'horizontal'
	size_hint_y: None
	height: 50
	ToggleButton:
		id: toggle_button
		on_press: root.selection_cb(self.text)
	Button:
		text: 'X'
		size_hint_x: 0.1
		on_release: root.prompt_delete_puzzle()
<PuzzleSelectionLayout>:
	number: ''
	puzzle: ''
	round_type: ''
	reward: ''
	selection_callback: None
	screen_manager: screen_manager
	round_type_spinner: round_type_spinner
	reward_input: reward_input
	orientation: 'horizontal'
	size_hint_y: None
	height: 30
	Label:
		text: str(root.number)
		size_hint_x: 0.25
	ScreenManager:
		id: screen_manager
		curr:
		    None if not self.has_screen('button') \
		    else 'button' if root.selection_callback \
		    else 'label'
        on_curr:
            if self.curr != self.current: \
            self.current = self.curr
		transition: NoTransition()
		size_hint_x: 1.75
		Screen:
			name: 'label'
			Label:
				id: puzzle_label
				text: root.puzzle
		Screen:
			name: 'button'
			Button:
				text: strings.button_select_puzzles
				on_release: root.select_clicked()
	Spinner:
		id: round_type_spinner
		text: root.round_type
		values: values.round_types
	TextInput:
		id: reward_input
		multiline: False
		text: str(root.reward)
<ManagerSettingsPrompt>:
	timer_input: timer_input
	vowel_input: vowel_input
	min_input: min_input
	clue_reward_input: clue_reward_input
	final_spin_bonus_input: final_spin_bonus_input
	wedges_input: wedges_input
	cash_values: data_caching.get_variables()
	title: strings.title_settings
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_timer_set
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: timer_input
				text: str(root.cash_values.get('timer_time', ''))
				hint_text: 'MM:SS'
				prev_widget: wedges_input
				next_widget: vowel_input
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_vowel_price
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: vowel_input
				text: str(root.cash_values.get('vowel_price', ''))
				hint_text:
				    strings.input_vowel_price.format(\
				    (   values.default_vowel_price))
				multiline: False
				prev_widget: timer_input
				next_widget: min_input
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_min_win
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: min_input
				text: str(root.cash_values.get('min_win', ''))
				hint_text: strings.input_min_win.format(values.default_min_win)
				multiline: False
				prev_widget: vowel_input
				next_widget: clue_reward_input
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_clue_solve_reward
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: clue_reward_input
				text: str(root.cash_values.get('clue_solve_reward', ''))
				hint_text:
				    strings.input_clue_solve_reward.format(\
				    (   values.default_clue_solve_reward))
				multiline: False
				prev_widget: min_input
				next_widget: final_spin_bonus_input
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Label:
				text: strings.label_final_spin_bonus
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TabCyclable:
				id: final_spin_bonus_input
				text: str(root.cash_values.get('final_spin_bonus', ''))
				hint_text:
				    strings.input_final_spin_bonus.format(\
				    (   values.default_final_spin_bonus))
				multiline: False
				prev_widget: clue_reward_input
				next_widget: wedges_input
		BoxLayout:
			orientation: 'horizontal'
			BoxLayout:
				orientation: 'vertical'
				size_hint_x: None
				Label:
					text: strings.label_wedges
					valign: 'center'
					halign: 'center'
				Button:
					text: strings.button_edit_hotkeys
					size_hint_y: 0.25
					on_release: root.edit_hotkeys()
			TabCyclable:
				id: wedges_input
				text:
					'\r\n'.join([str(i) for i in root.cash_values.get('cash_values', [])])
				hint_text: strings.input_cash_values
				prev_widget: final_spin_bonus_input
				next_widget: timer_input
		Widget:
			size_hint_y: 0.02
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.input_save()
<EditHotkeysPrompt>:
	hotkey_select_1: hotkey_select_1
	hotkey_select_2: hotkey_select_2
	hotkey_select_3: hotkey_select_3
	hotkey_select_next: hotkey_select_next
	hotkey_increase_score: hotkey_increase_score
	hotkey_select_puzzle: hotkey_select_puzzle
	hotkey_clear_puzzle: hotkey_clear_puzzle
	hotkey_solve: hotkey_solve
	hotkey_timer_start: hotkey_timer_start
	hotkey_timer_reset: hotkey_timer_reset
	hotkey_start_tossup: hotkey_start_tossup
	hotkey_buzzer: hotkey_buzzer
	hotkey_lose_turn: hotkey_lose_turn
	hotkey_bankrupt: hotkey_bankrupt
	hotkey_buy_vowel: hotkey_buy_vowel
	hotkey_bank_score: hotkey_bank_score
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'vertical'
			Widget:
				size_hint_y: None
				height: 20
			Label:
				text: strings.label_edit_hotkey_info
				size_hint_y: None
				size: self.texture_size
			Widget:
				size_hint_y: None
				height: 20
			ScrollView:
				BoxLayout:
					id: hotkey_layout
					orientation: 'vertical'
					size_hint_y: None
					height: self.minimum_height
					HotkeyLayout:
						id: hotkey_select_1
						description: strings.label_hotkey_select_1
						name: 'select_1'
					HotkeyLayout:
						id: hotkey_select_2
						description: strings.label_hotkey_select_2
						name: 'select_2'
					HotkeyLayout:
						id: hotkey_select_3
						description: strings.label_hotkey_select_3
						name: 'select_3'
					HotkeyLayout:
						id: hotkey_select_next
						description: strings.label_hotkey_select_next
						name: 'select_next'
					HotkeyLayout:
						id: hotkey_increase_score
						description: strings.label_hotkey_increase_score
						name: 'increase_score'
					HotkeyLayout:
						id: hotkey_select_puzzle
						description: strings.label_hotkey_select_puzzle
						name: 'select_puzzle'
					HotkeyLayout:
						id: hotkey_clear_puzzle
						description: strings.label_hotkey_clear_puzzle
						name: 'clear_puzzle'
					HotkeyLayout:
						id: hotkey_solve
						description: strings.label_hotkey_solve
						name: 'solve'
					HotkeyLayout:
						id: hotkey_timer_start
						description: strings.label_hotkey_timer_start
						name: 'timer_start'
					HotkeyLayout:
						id: hotkey_timer_reset
						description: strings.label_hotkey_timer_reset
						name: 'timer_reset'
					HotkeyLayout:
						id: hotkey_start_tossup
						description: strings.label_hotkey_start_tossup
						name: 'start_tossup'
					HotkeyLayout:
						id: hotkey_buzzer
						description: strings.label_hotkey_buzzer
						name: 'buzzer'
					HotkeyLayout:
						id: hotkey_lose_turn
						description: strings.label_hotkey_lose_turn
						name: 'lose_turn'
					HotkeyLayout:
						id: hotkey_bankrupt
						description: strings.label_hotkey_bankrupt
						name: 'bankrupt'
					HotkeyLayout:
						id: hotkey_buy_vowel
						description: strings.label_hotkey_buy_vowel
						name: 'buy_vowel'
					HotkeyLayout:
						id: hotkey_bank_score
						description: strings.label_hotkey_bank_score
						name: 'bank_score'
			Widget:
				size_hint_y: None
				height: 5
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.confirm()
<HotkeyLayout@BoxLayout>
	description: ''
	name: ''
	hotkey_text_label: hotkey_text_label
	warning_icon: warning_icon
	orientation: 'vertical'
	size_hint_y: None
	height: 30
	BoxLayout:
		orientation: 'horizontal'
		Label:
			text: root.description
			size_hint_x: 1/3
			text_size: self.size
			halign: 'right'
			valign: 'center'
			padding_x: 5
		BoxLayout:
			orientation: 'horizontal'
			canvas.before:
				Color:
					rgba: 1, 1, 1, 1
				Rectangle:
					pos: self.pos
					size: self.size
			RecordHotkeyLabel:
				id: hotkey_text_label
				name: root.name
			Image:
				id: warning_icon
				source: values.file_alert_icon
				color: (1, 1, 1, 0)
				size_hint: (None, 1)
				width: self.height
		Button:
			text: strings.button_default
			on_release: hotkey_text_label.default()
			size_hint_x: 0.2
	Widget:
		size_hint_y: 0.2
<RecordHotkeyLabel>:
	name: ''
	color: 0, 0, 0, 1
	text_size: self.size
	halign: 'left'
	valign: 'center'
	padding_x: 5
	on_release: self.start_listening()
<FileChooserIconView>
    # on_selection doesn't seem to work in python
    select_callback: None
    on_selection: self.select_callback() if self.select_callback else None
<YesNoPrompt>
	scroll_label: scroll_label
    BoxLayout:
        orientation: 'vertical'
        ScrollableLabel:
			id: scroll_label
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.25
            Button:
                id: button_no
                text: strings.button_no
				on_release:
					if root.no_callback: root.no_callback()
					root.dismiss()
            Button:
                id: button_yes
                text: strings.button_yes
				on_release:
					if root.yes_callback: root.yes_callback()
					root.dismiss()
<ChooseLetterPrompt>:
    title: strings.title_choose_letter
    on_dismiss:
        if self._keyboard: \
        self._keyboard.release()
    LetterboardLayout:
        callback: root.letter_chosen
        unavailable: root.unavailable_letters
<FileChooserPrompt>:
	chooser: chooser
	title: strings.button_load
	BoxLayout:
		orientation: 'vertical'
		FileChooserIconView:
			id: chooser
			path: root.chooser_path
			multiselect: root.multiselect
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.confirm()
<FileSaverPrompt>:
	chooser_path: ''
	chooser: chooser
	filename_input: filename_input
	filename_label: filename_label
	title: strings.button_export
	BoxLayout:
		orientation: 'vertical'
		FileChooserIconView:
			id: chooser
			path: root.chooser_path
			on_selection:
				if self.selection: \
				filename_input.text = os.path.basename(self.selection[0])
		Widget:
			size_hint_y: 0.02
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: 30
			Label:
				id: filename_label
				text: strings.label_filename
				size_hint_x: None
				valign: 'center'
				halign: 'center'
			TextInput:
				id: filename_input
		Widget:
			size_hint_y: 0.02
		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: 0.25
			Button:
				text: strings.button_close
				on_release: root.dismiss()
			Button:
				text: strings.button_confirm
				on_release: root.input_save()
<InfoPrompt>:
    id: info_prompt
	label_text: ''
    BoxLayout:
        orientation: 'vertical'
        ScrollableLabel:
            label_text: root.label_text
        Button:
            text: strings.button_ok
            size_hint_y: 0.25
            on_release: info_prompt.dismiss()
<TiebreakerPrompt>:
	eligible_players: []
	player_names: []
	title: strings.title_tie
	BoxLayout:
		orientation: 'vertical'
		ScrollableLabel:
			label_text: strings.label_select_tiebreaker
		Button:
			text: strings.button_select_puzzle
			on_release: root.select_puzzle()
		BoxLayout:
			orientation: 'horizontal'
			Button:
				background_normal: ''
				background_color: values.color_red
				size_hint_x: 1 if 1 in root.eligible_players else 0
				opacity: 1 if self.size_hint_x else 0
				width: 0
				font_name: values.font_score
				font_size: self.height / 4
				text:
					strings.button_player_wins.format(\
					root.player_names[0] \
					if root.player_names and root.player_names[0] \
					else strings.button_player1)
				on_release:
					root.select_player_cb(1)
					root.permission_to_dismiss = True
					root.dismiss()
			Button:
				background_normal: ''
				background_color: values.color_yellow
				size_hint_x: 1 if 2 in root.eligible_players else 0
				opacity: 1 if self.size_hint_x else 0
				width: 0
				font_name: values.font_score
				font_size: self.height / 4
				text:
					strings.button_player_wins.format(\
					root.player_names[1] \
					if root.player_names and root.player_names[1] \
					else strings.button_player2)
				on_release:
					root.select_player_cb(2)
					root.permission_to_dismiss = True
					root.dismiss()
			Button:
				background_normal: ''
				background_color: values.color_blue
				size_hint_x: 1 if 3 in root.eligible_players else 0
				opacity: 1 if self.size_hint_x else 0
				width: 0
				font_name: values.font_score
				font_size: self.height / 4
				text:
					strings.button_player_wins.format(\
					root.player_names[2] \
					if root.player_names and root.player_names[2] \
					else strings.button_player3)
				on_release:
					root.select_player_cb(3)
					root.permission_to_dismiss = True
					root.dismiss()
<ScrollableLabel@AnchorLayout>:
	label_text: ''
    BoxLayout:
        orientation: 'vertical'
        Widget:
            size_hint_y: 0.1
        ScrollView:
            size_hint_max_y: text_layout.height
            BoxLayout:
                id: text_layout
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                Label:
                    text: root.label_text
                    size_hint_y: None
                    size: self.texture_size
        Widget:
            size_hint_y: 0.1
